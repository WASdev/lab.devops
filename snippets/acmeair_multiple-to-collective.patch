diff -ruN acmeair_multiple-servers/acmeair/libraries/serverconfig.rb acmeair_collective/acmeair/libraries/serverconfig.rb
--- acmeair_multiple-servers/acmeair/libraries/serverconfig.rb	1969-12-31 16:00:00.000000000 -0800
+++ acmeair_collective/acmeair/libraries/serverconfig.rb	2015-01-14 05:02:45.554052187 -0800
@@ -0,0 +1,103 @@
+# Cookbook Name:: acmeair
+# Attributes:: default
+#
+# (C) Copyright IBM Corporation 2013, 2015.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+
+require "rexml/document"
+
+module Liberty
+  module Server
+    class Config
+
+      attr_accessor :doc
+      attr_accessor :modified
+
+      def initialize(utils, serverName, doc)
+        @utils = utils
+        @serverName = serverName
+        @doc = doc
+        @modified = false
+      end
+
+      def self.load(node, serverName)
+	Chef::Log.info("load entry")
+        utils = Liberty::Utils.new(node)
+        serverXml = "#{utils.serversDirectory}/#{serverName}/server.xml"
+        f = File.open(serverXml)
+        doc = REXML::Document.new(f)
+        f.close
+        return Config.new(utils, serverName, doc)
+      end
+
+      def save()
+        serverXmlNew = "#{@utils.serversDirectory}/#{@serverName}/server.xml.new"
+        out = File.open(serverXmlNew, "w")
+        formatter = REXML::Formatters::Pretty.new
+        formatter.compact = true
+        formatter.write(@doc, out)
+        out.close
+
+        @utils.chown(serverXmlNew)
+
+        serverXml = "#{@utils.serversDirectory}/#{@serverName}/server.xml"
+        FileUtils.mv(serverXmlNew, serverXml)
+      end
+
+      def include(location)
+        return Include.new(self, location)
+      end
+
+      def feature(name)
+        return Feature.new(self, name)
+      end
+
+    end
+
+    class Include
+
+      def initialize(parent, location)
+        @parent = parent
+
+        @include = @parent.doc.root.elements["include[@location='#{location}']"]
+        if ! @include
+          @include = REXML::Element.new("include")
+          @include.attributes["location"] = location
+          @parent.doc.root << @include
+          @parent.modified = true
+        end
+
+      end
+
+    end
+
+    class Feature
+
+      def initialize(parent, name)
+        @parent = parent
+
+        @feature = @parent.doc.root.elements["//featureManager"].elements["//feature[text() = '#{name}']"]
+        if ! @feature
+          @feature = REXML::Element.new("feature")
+          @feature.add_text("#{name}")
+          @parent.doc.root.elements["//featureManager"] << @feature
+          @parent.modified = true
+        end
+
+      end
+
+    end
+
+  end
+end
+
diff -ruN acmeair_multiple-servers/acmeair/providers/controller.rb acmeair_collective/acmeair/providers/controller.rb
--- acmeair_multiple-servers/acmeair/providers/controller.rb	1969-12-31 16:00:00.000000000 -0800
+++ acmeair_collective/acmeair/providers/controller.rb	2015-01-14 05:02:45.554052187 -0800
@@ -0,0 +1,83 @@
+action :install do
+
+  liberty_dir = "#{node[:wlp][:base_dir]}/wlp"
+
+  # create directories for shared resources and server definition
+  ["#{liberty_dir}/usr/shared/resources/derby/",
+   "#{liberty_dir}/usr/servers/#{new_resource.server_name}/"].each do | name |
+    directory name do
+      mode 00775
+      owner node[:wlp][:user]
+      group node[:wlp][:group]
+      action :create
+      recursive true
+    end
+  end
+
+  jenkins_base_url = "http://server:8080/job/AcmeAir%20tests/lastSuccessfulBuild/artifact"
+
+  wlp_bootstrap_properties "set bootstrap.properties" do
+    server_name "#{new_resource.server_name}"
+    properties "httpPort" => "#{new_resource.http_port_num}", "httpsPort" => "#{new_resource.https_port_num}"
+    action :set
+  end
+
+  # define service beforehand - otherwise notifications from ruby_block won't work
+  #service "wlp-#{new_resource.server_name}" do
+    #supports :start => true, :restart => true, :stop => true, :status => true
+   # action :nothing
+  #end
+
+  # mapping of file locations to features
+  feature_map = {
+    "frappe" => "http://server:9111/files/com.ibm.websphere.appserver.frappe-1.0.esa",
+    "collectiveController" => "http://server:9111/files/com.ibm.websphere.appserver.restHandler-1.0.esa",
+    "restHandler" => "http://server:9111/files/com.ibm.websphere.appserver.collectiveController-1.0.esa",
+    "adminCenter" => "http://server:9111/files/com.ibm.websphere.appserver.adminCenter-1.0.esa",
+    "adminCenter_collectiveController" => "http://server:9111/files/com.ibm.websphere.appserver.adminCenter.collectiveController-1.0.esa",
+    "explore" => "http://server:9111/files/com.ibm.websphere.appserver.adminCenter.tool.explore-1.0.esa",
+    "adminSecurity" => "http://server:9111/files/com.ibm.websphere.appserver.adminSecurity-1.0.esa"
+  }
+
+  # download each file and place it in right directory
+  feature_map.each do | feature, feature_location |
+    wlp_install_feature feature do
+      location feature_location
+      accept_license true
+    end
+  end
+
+  # configure controller server
+  wlp_server "#{new_resource.server_name}" do
+    config ({
+      "featureManager" => {
+        "feature" => [ "adminCenter-1.0", "collectiveController-1.0" ]
+      },
+      # this file is created by the wlp_collective create
+      "include" => {
+        "location" => "${server.config.dir}/controller.xml"
+      },
+      "httpEndpoint" => {
+        "id" => "defaultHttpEndpoint",
+        "host" => "*",
+        "httpPort" => "#{new_resource.http_port_num}",
+        "httpsPort" => "#{new_resource.https_port_num}"
+      }
+    })
+    action :create
+  end
+
+  wlp_collective "#{new_resource.server_name}" do
+    action :create
+    server_name #{new_resource.server_name}
+    keystorePassword "Liberty"
+    admin_user "admin"
+    admin_password "adminpwd"
+  end
+
+  # start server if it is not running already
+  wlp_server "#{new_resource.server_name}" do
+    action :start
+  end
+
+end
diff -ruN acmeair_multiple-servers/acmeair/providers/server.rb acmeair_collective/acmeair/providers/server.rb
--- acmeair_multiple-servers/acmeair/providers/server.rb	2015-01-14 05:00:59.914051242 -0800
+++ acmeair_collective/acmeair/providers/server.rb	2015-01-14 05:02:45.554052187 -0800
@@ -41,6 +41,37 @@
     action :set
   end

+  if !new_resource.controller_port_num.nil?
+    wlp_install_feature "clusterMember" do
+      location "http://server:9111/files/com.ibm.websphere.appserver.clusterMember-1.0.esa"
+      accept_license true
+    end
+
+    # join the server to the collective
+    wlp_collective "#{new_resource.server_name}" do
+      action :join
+      server_name new_resource.server_name
+      # the following are the details of the collective controller
+      host "localhost"
+      port "#{new_resource.controller_port_num}"
+      user "admin"
+      password "adminpwd"
+      keystorePassword "Liberty"
+    end
+
+    # altering server.xml file
+    ruby_block "add clusterMember-1.0 to #{new_resource.server_name} " do
+      block do
+        config = Liberty::Server::Config.load(node, new_resource.server_name)
+        config.include("${server.config.dir}/collective-join-include.xml")
+        config.feature("clusterMember-1.0")
+        if config.modified
+          config.save()
+        end
+      end
+    end
+  end
+
   # start server if it is not running already
   wlp_server "#{new_resource.server_name}" do
     action :start
diff -ruN acmeair_multiple-servers/acmeair/recipes/default.rb acmeair_collective/acmeair/recipes/default.rb
--- acmeair_multiple-servers/acmeair/recipes/default.rb	2015-01-14 04:58:16.126049778 -0800
+++ acmeair_collective/acmeair/recipes/default.rb	2015-01-14 05:03:14.598052447 -0800
@@ -1,12 +1,25 @@
 include_recipe "wlp::default"

+# determines whether or not to create a collective
+collective = node[:acmeair][:servers][:collective]
 servers = node[:acmeair][:servers][:application]

+# create an additional server acmeair0 to be controller if collective is required
+if collective == 1
+  acmeair_controller "acmeair controller" do
+    server_name "acmeair0"
+    http_port_num 9080
+    https_port_num 9443
+    action :install
+  end
+end
+
 for server_num in 1..servers
   acmeair_server "create server acmeair#{server_num}" do
     server_name "acmeair#{server_num}"
     http_port_num 9080+server_num
     https_port_num 9443+server_num
+    controller_port_num 9443
     action :install
   end
 end
diff -ruN acmeair_multiple-servers/acmeair/resources/controller.rb acmeair_collective/acmeair/resources/controller.rb
--- acmeair_multiple-servers/acmeair/resources/controller.rb	1969-12-31 16:00:00.000000000 -0800
+++ acmeair_collective/acmeair/resources/controller.rb	2015-01-14 05:02:45.554052187 -0800
@@ -0,0 +1,6 @@
+attribute :server_name, :kind_of => String, :default => nil
+attribute :http_port_num, :kind_of => Integer, :default => 9080
+attribute :https_port_num, :kind_of => Integer, :default => 9443
+
+actions :install
+default_action :install
diff -ruN acmeair_multiple-servers/acmeair/resources/server.rb acmeair_collective/acmeair/resources/server.rb
--- acmeair_multiple-servers/acmeair/resources/server.rb	2015-01-14 04:59:04.714050212 -0800
+++ acmeair_collective/acmeair/resources/server.rb	2015-01-14 05:02:45.554052187 -0800
@@ -1,6 +1,7 @@
 attribute :server_name, :kind_of => String, :default => nil
 attribute :http_port_num, :kind_of => Integer, :default => 9081
 attribute :https_port_num, :kind_of => Integer, :default => 9444
+attribute :controller_port_num, :kind_of => Integer, :default => nil

 actions :install
 default_action :install
